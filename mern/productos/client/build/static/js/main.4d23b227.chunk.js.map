{"version":3,"sources":["context/UserContext.js","components/products/ProductList.js","components/products/ProductForm.js","components/header/Header.js","components/products/ProductManager.js","components/register/RegisterForm.js","components/login/Login.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","createContext","ProductList","props","context","useContext","useEffect","axios","get","then","resp","console","log","setProducts","data","catch","err","Swal","fire","socket","on","prds","products","index","findIndex","prd","_id","splice","Row","Col","xs","Table","map","p","i","name","price","type","brand","manufacturer","firstName","stock","to","user","id","onClick","e","title","text","confirmButtonText","cancelButtonText","showCancelButton","icon","value","delete","prods","filter","deleteFn","patch","emit","buy","initialState","initialErrors","ProductForm","useState","inputs","setInputs","errors","setErrors","hist","useHistory","useParams","updateFormValue","target","view","edit","Form","onSubmit","preventDefault","new","post","push","field","response","message","put","FormGroup","Label","Input","onChange","required","minLength","readOnly","style","color","className","Button","marginLeft","Header","ProductManager","prosp","useRouteMatch","path","url","exact","lastName","email","password","confirmPassword","RegisterForm","newUser","setNewUser","Login","history","success","setUser","sessionStorage","setItem","JSON","stringify","App","io","connect","getItem","userData","parse","Provider","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d23b227.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst UserContext = createContext();\n\nexport default UserContext;","import { useContext, useEffect } from \"react\";\nimport { Col, Row, Table } from \"reactstrap\";\nimport axios from 'axios';\nimport Swal from 'sweetalert2'; \nimport { Link } from \"react-router-dom\";\nimport { BsFillEyeFill, BsFillTrashFill, BsPencil } from \"react-icons/bs\";\nimport { AiFillDollarCircle } from \"react-icons/ai\";\nimport UserContext from \"../../context/UserContext\";\n\nconst ProductList = (props) => {\n\n    const context = useContext(UserContext);\n    \n    useEffect(() => {\n        axios.get('/api/products')\n            .then(resp => {\n                console.log('RESP', resp);\n                props.setProducts(resp.data);\n            }).catch(err => Swal.fire('Error getting products', 'Error getting the products list', 'error'));\n    }, []);\n\n    const deleteFn = (e, p) => {\n        Swal.fire({\n            title: 'Delete Prodcuts',\n            text: 'Are you sure?',\n            confirmButtonText: 'Yes, delete!!',\n            cancelButtonText: 'No',\n            showCancelButton: true,\n            icon: 'warning'\n        }).then(resp => {\n            if(resp.value) {\n                axios.delete('/api/products/'+p._id)\n                    .then(resp => {\n                        const prods = props.products.filter(prd => prd._id != p._id);\n                        props.setProducts(prods);\n                        Swal.fire('Product deleted', 'Products deleted successful', 'success');\n                    })\n                    .catch(err => Swal.fire('Product deleted', 'Products deletion failed', 'error'));\n            }\n        })\n    } \n\n    const buy = (e, p) => {\n        axios.patch('/api/products/'+p._id)\n            .then(resp => {\n                const data = resp.data;\n                const prds = [...props.products];\n                const index = prds.findIndex(prd => prd._id == data._id);\n                prds.splice(index, 1, data);\n                props.setProducts(prds);\n                context.socket.emit('buy_event', data);\n            }).catch(err => Swal.fire('Error buying product', 'Error buying the product', 'error'));\n    }\n\n    context.socket.on(\"buy_product_event\", data => {\n        const prds = [...props.products];\n        const index = prds.findIndex(prd => prd._id == data._id);\n        prds.splice(index, 1, data);\n        props.setProducts(prds);\n    })\n\n    return (\n        <Row>\n            <Col xs={12}>\n                <Table>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Price</th>\n                            <th>Type</th>\n                            <th>Brand</th>\n                            <th>Manufacturer</th>\n                            <th>Stock</th>\n                            <th>Ver</th>\n                            <th>Editar</th>\n                            <th>Eliminar</th>\n                            <th>Comprar</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        { props.products.map((p, i) => \n                            <tr key={i}>\n                                <td>{p.name}</td>\n                                <td>{p.price}</td>\n                                <td>{p.type}</td>\n                                <td>{p.brand}</td>\n                                <td>{p.manufacturer[0]?.firstName}</td>\n                                <td>{p.stock}</td>\n                                <td><Link to={`/products/view/${p._id}`}><BsFillEyeFill/></Link> </td>\n                                <td>{context.user.id == p.manufacturer[0]?._id && <Link to={`/products/edit/${p._id}`}><BsPencil/></Link> }</td>\n                                <td>{context.user.id == p.manufacturer[0]?._id && <a onClick={e => deleteFn(e, p)}><BsFillTrashFill/></a> }</td>\n                                <td>{context.user.id != p.manufacturer[0]?._id && <a onClick={e => buy(e, p)}><AiFillDollarCircle/></a> }</td>\n                            </tr>\n                        )}\n                    </tbody>\n                </Table>\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProductList;\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Button, Col, Form, FormGroup, Input, Label, Row } from \"reactstrap\";\n\nconst initialState= {\n    name: '',\n    price: 0,\n    type: '',\n    brand: '',\n    stock: 0\n}\n\nconst initialErrors = {\n    name: '',\n    price: '',\n    type: '',\n    brand: '',\n    stock: ''\n}\n\nconst ProductForm = (props) => {\n\n    const [inputs, setInputs] = useState(initialState);\n    const [errors, setErrors] = useState(initialErrors);\n\n    const hist = useHistory();\n\n    const {id} = useParams();\n\n    const updateFormValue = (e) => {\n        const { name, value } = e.target;\n        setInputs({\n            ...inputs,\n            [name]: value\n        });\n    }\n\n    const save = (e) => {\n        e.preventDefault();\n        if(props.new) {\n            axios.post('/api/products', inputs)\n                .then(resp => {\n                    console.log('RESP', resp);\n                    hist.push('/products/list')\n                }).catch( err => {\n                    for(let field in err.response.data.errors) {\n                        setErrors({\n                            ...errors,\n                            [field]: err.response.data.errors[field].message\n                        });\n                    }\n                });\n        } else if(props.edit) {\n            axios.put('/api/products/'+id, inputs)\n                .then(resp => {\n                    console.log('RESP', resp);\n                    hist.push('/products/list')\n                }).catch( err => {\n                    for(let field in err.response.data.errors) {\n                        setErrors({\n                            ...errors,\n                            [field]: err.response.data.errors[field].message\n                        });\n                    }\n                });\n        }\n\n    }\n\n    useEffect(() => {\n        if(props.view || props.edit) {\n            axios.get('/api/products/' + id)\n                .then(resp => {\n                    setInputs(resp.data);\n                }).catch(err => console.log(err));\n        }\n    }, []);\n\n    const back = (e) => {\n        hist.push('/products/list');\n    }\n  \n    return (\n        <Form onSubmit={save}>\n            <Row>\n                <Col xs={12}>\n                    <FormGroup>\n                        <Label>Name</Label>\n                        <Input type=\"tex\" name=\"name\" value={inputs.name} onChange={updateFormValue} required minLength={2} readOnly={props.view}/>\n                        {errors.name && <span style={{color: 'red'}}>{errors.name}</span>}\n                    </FormGroup>\n                </Col>\n                <Col xs={12}>\n                    <FormGroup>\n                        <Label>Price</Label>\n                        <Input type=\"number\" name=\"price\" value={inputs.price} onChange={updateFormValue} required readOnly={props.view}/>\n                        {errors.price && <span style={{color: 'red'}}>{errors.price}</span>}\n                    </FormGroup>\n                </Col>\n                <Col xs={12}>\n                    <FormGroup>\n                        <Label>Type</Label>\n                        <Input type=\"tex\" name=\"type\" value={inputs.type} onChange={updateFormValue} required readOnly={props.view}/>\n                        {errors.type && <span style={{color: 'red'}}>{errors.type}</span>}\n                    </FormGroup>\n                </Col>\n                <Col xs={12}>\n                    <FormGroup>\n                        <Label>Brand</Label>\n                        <Input type=\"tex\" name=\"brand\" value={inputs.brand} onChange={updateFormValue} required readOnly={props.view}/>\n                        {errors.brand && <span style={{color: 'red'}}>{errors.brand}</span>}\n                    </FormGroup>\n                </Col>\n                <Col xs={12}>\n                    <FormGroup>\n                        <Label>Stock</Label>\n                        <Input type=\"number\" name=\"stock\" value={inputs.stock} onChange={updateFormValue} required readOnly={props.view}/>\n                        {errors.stock && <span style={{color: 'red'}}>{errors.stock}</span>}\n                    </FormGroup>\n                </Col>\n                <Col xs={12} className=\"mt-3\">\n                    { !props.view && <Button type=\"submit\">Save</Button>}\n                    <Button style={{marginLeft: '10px'}} type=\"button\" onClick={back}>Back</Button>\n                </Col>\n            </Row>\n        </Form>\n    )\n}\n\nexport default ProductForm;","import { useContext } from \"react\";\nimport UserContext from \"../../context/UserContext\";\n\nconst Header = () => {\n\n    const context = useContext(UserContext);\n\n    return (\n        <>\n            <h1>User: {context.user?.firstName}</h1>\n            \n\n        </>\n    )\n}\n\nexport default Header;","import { useState } from \"react\";\nimport { Row, Col } from \"reactstrap\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useRouteMatch\n  } from \"react-router-dom\";\nimport ProductList from \"./ProductList\";\nimport {BsFillPlusCircleFill} from 'react-icons/bs';\nimport ProductForm from \"./ProductForm\";\nimport Header from \"../header/Header\";\n\nconst ProductManager = (prosp) => {\n\n    const {path, url} = useRouteMatch();\n\n    const [products, setProducts] = useState([]);\n\n    return (\n        <>\n            <Router>\n                <Header></Header>\n                <Row>\n                    <Col xs={10}>\n                        <h1>Product Manager</h1>\n                    </Col>\n                    <Col xs={2}>\n                        <Link to={`${url}/new`}>\n                            <BsFillPlusCircleFill></BsFillPlusCircleFill>\n                        </Link>\n                    </Col>\n                </Row>\n                <Switch>\n                    <Route exact path={`${path}/list`}>\n                        <ProductList products={products} setProducts={setProducts} />\n                    </Route>\n                    <Route path={`${path}/new`}>\n                        <ProductForm new={true}/>\n                    </Route>\n                    <Route path={`${path}/edit/:id`}>\n                        <ProductForm edit={true}/>\n                    </Route>\n                    <Route path={`${path}/view/:id`}>\n                        <ProductForm view={true}/>\n                    </Route>\n                </Switch>\n            </Router>\n        </>\n    )\n}\n\nexport default ProductManager;","import axios from \"axios\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Col, Form, FormGroup, Input, Label, Row } from \"reactstrap\";\nimport Swal from \"sweetalert2\";\n\nconst initialState = {\n    firstName: '',\n    lastName:'', \n    email:'',\n    password:'',\n    confirmPassword:''\n}\n\nconst RegisterForm = () => {\n\n    const [newUser, setNewUser] = useState(initialState);\n    const [errors, setErrors] = useState(initialState);\n\n    const hist = useHistory();\n\n    const updateFormValue = (e) => {\n        const {name, value} = e.target;\n        setNewUser({\n            ...newUser,\n            [name]: value\n        });\n\n        setErrors({\n            ...errors,\n            [name]: ''\n        })\n    }\n\n    const register =(e) => {\n        e.preventDefault();\n        axios.post('/api/registry', newUser)\n            .then(resp => {\n                setNewUser(initialState);\n                Swal.fire('User Register', 'The user was successfully registered', 'success');\n            }).catch(err => {\n                for(let field in err.response.data.errors) {\n                    setErrors({\n                        ...errors,\n                        [field]: err.response.data.errors[field].message\n                    });\n                }\n            });\n        \n    } \n\n    return (\n        <>\n            <h1>Register</h1>\n            <Form onSubmit={register}>\n                <Row>\n                    <Col xs={12}>\n                        <FormGroup>\n                            <Label>First Name</Label>\n                            <Input type=\"tex\" name=\"firstName\" value={newUser.firstName} onChange={updateFormValue} required/>\n                            {errors.firstName && <span style={{color: 'red'}}>{errors.firstName}</span>}\n                        </FormGroup>\n                    </Col>\n                    <Col xs={12}>\n                        <FormGroup>\n                            <Label>Last Name</Label>\n                            <Input type=\"tex\" name=\"lastName\" value={newUser.lastName} onChange={updateFormValue} required/>\n                            {errors.lastName && <span style={{color: 'red'}}>{errors.lastName}</span>}\n                        </FormGroup>\n                    </Col>\n                    <Col xs={12}>\n                        <FormGroup>\n                            <Label>Email</Label>\n                            <Input type=\"email\" name=\"email\" value={newUser.email} onChange={updateFormValue} required/>\n                            {errors.email && <span style={{color: 'red'}}>{errors.email}</span>}\n                        </FormGroup>\n                    </Col>\n                    <Col xs={12}>\n                        <FormGroup>\n                            <Label>Password</Label>\n                            <Input type=\"password\" name=\"password\" value={newUser.password} onChange={updateFormValue} required/>\n                            {errors.password && <span style={{color: 'red'}}>{errors.password}</span>}\n                        </FormGroup>\n                    </Col>\n                    <Col xs={12}>\n                        <FormGroup>\n                            <Label>Confirm Password</Label>\n                            <Input type=\"password\" name=\"confirmPassword\" value={newUser.confirmPassword} onChange={updateFormValue} required/>\n                            {errors.confirmPassword && <span style={{color: 'red'}}>{errors.confirmPassword}</span>}\n                        </FormGroup>\n                    </Col>\n                    <Col xs={12} className=\"mt-3\">\n                        <Button type=\"submit\">Register</Button>\n                        <Button type=\"button\" onClick={e => hist.push(\"/\")} style={{marginLeft: '10px'}}>Back</Button>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    )\n}\n\nexport default RegisterForm;","import axios from \"axios\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Button, Col, Form, FormGroup, Input, Label, Row } from \"reactstrap\";\nimport Swal from \"sweetalert2\";\nimport UserContext from \"../../context/UserContext\";\n\nconst Login = () => {\n\n    const history = useHistory();\n\n    const context = useContext(UserContext);\n\n    const [inputs, setInputs] = useState({\n        email: '',\n        password: ''\n    });\n\n    const updateFormValue =(e) => {\n        const {name, value} = e.target;\n        setInputs({\n            ...inputs,\n            [name]: value\n        });\n    }\n\n    const login =(e) => {\n        e.preventDefault();\n        axios.post('/api/login', inputs)\n            .then(resp => {\n                if(resp.data.success) {\n                    context.setUser(resp.data.user);\n                    sessionStorage.setItem('USER_DATA', JSON.stringify(resp.data.user));\n                    history.push('/products/list');\n                }\n            }).catch(err => {\n                Swal.fire('Login attempt', err.response.data.message, 'error');\n            });\n    }\n\n    return (\n        <>\n            <h1>Login</h1>\n            <Form onSubmit={login}>\n                <Row>\n                    <Col xs={12}>\n                        <FormGroup>\n                            <Label>Email</Label>\n                            <Input type=\"email\" name=\"email\" value={inputs.email} onChange={updateFormValue} required/>\n                        </FormGroup>\n                    </Col>\n                    <Col xs={12}>\n                        <FormGroup>\n                            <Label>Password</Label>\n                            <Input type=\"password\" name=\"password\" value={inputs.password} onChange={updateFormValue} required/>\n                        </FormGroup>\n                    </Col>\n                    <Col xs={12} className=\"mt-3\">\n                        <Button type=\"submit\">Login</Button>\n                    </Col>\n                    <Col xs={12} className=\"mt-3\">\n                        <Link to=\"/register\">Register new user</Link>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    )\n\n}\n\nexport default Login;","import { Container } from 'reactstrap'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory\n} from \"react-router-dom\";\nimport ProductManager from './components/products/ProductManager';\nimport RegisterForm from './components/register/RegisterForm';\nimport Login from './components/login/Login';\nimport { useEffect, useState } from 'react';\nimport UserContext from './context/UserContext';\nimport io from 'socket.io-client';\n\n\nfunction App() {\n  const [user, setUser] = useState({});\n  const [socket] = useState(io.connect(\"/\"));\n\n  useEffect(() => {\n    if(sessionStorage.getItem('USER_DATA')) {\n        const userData = JSON.parse(sessionStorage.getItem('USER_DATA'));\n        setUser(userData);\n        // history.push('/products/list');\n    }\n  }, []);\n\n  return (\n    <UserContext.Provider value={{user, setUser, socket}}>\n      <Router>\n        <Container>\n            <Switch>\n              <Route exact path=\"/\">\n                <Login />\n              </Route>\n              <Route path=\"/register\">\n                <RegisterForm />\n              </Route>\n              <Route path=\"/products\">\n                <ProductManager/>  \n              </Route>\n            </Switch>  \n        </Container>\n      </Router>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}